@use 'sass:list';
@use 'sass:math';
@use '../tokens';
@use '../mixins';

@mixin share($props.../*, $value */) {
  @for $i from 1 to list.length($props) {
    #{list.nth($props, $i)}: list.nth($props, -1);
  }
}

@mixin mask($mask) {
  $maskParam: url($mask);
  @include share(mask-image, -webkit-mask-image, $maskParam);
  @include share(mask-position, -webkit-mask-position, center center);
  @include share(mask-repeat, -webkit-mask-repeat, no-repeat);
  @include share(mask-size, -webkit-mask-size, contain);      
}

.icon {
  aspect-ratio: 1;
  display: block;
  min-width: var(--width);
  transform-origin: top left;
}

$macIcons: 1024px, 512px, 256px, 128px, 32px, 16px;

.icons-grid--macOS-max-512 {
  display: grid;
  width: calc(100dvw - 2 * var(--col));
  max-width: fit-content;
  gap: var(--u32);
  padding: var(--u32);
  box-shadow: inset 0 0 0 var(--px) var(--edgeColor);
  @mixin x1Grid {
    grid-template-columns: 
      auto 
      list.nth($macIcons, 2)
      list.nth($macIcons, 4)
      auto 
      auto;
    grid-template-rows: 
      list.nth($macIcons, 1)
      list.nth($macIcons, 3)
      list.nth($macIcons, 4)
      auto 
      auto;
    .icon--1024px {
      grid-row: 1 / 2;
      grid-column: 1 / -1;
    }
    .icon--512px {
      grid-row: 2 / 4;
      grid-column: 2 / 3;
    }
    .icon--256px {
      grid-row: 2 / 3;
      grid-column: 3 / 5;
    }
    .icon--128px {
      grid-row: 3 / 4;
      grid-column: 3 / 4;
    }
    .icon--32px {
      grid-row: 3 / 4;
      grid-column: 4 / 5;
    }
    .icon--16px {
      margin-top: calc(list.nth($macIcons, 5) + var(--u32));
      grid-row: 3 / 4;
      grid-column: 4 / 5;
    }
  }
  @mixin x2GridLandscape {
    grid-template-columns: 
      min(
        calc(list.nth($macIcons, 1) / var(--density)), 
        auto)
      calc(list.nth($macIcons, 3) / var(--density))
      auto;
    grid-template-rows: 
      calc(list.nth($macIcons, 2) / var(--density))
      auto;
    .icon--1024px {
      display: none;
    }
    .icon--512px {
      grid-row: 1 / 3;
      grid-column: 1 / 2;
      --width: min(100%, list.nth($macIcons, 2)) !important;
    }
    .icon--256px {
      grid-row: 1 / 2;
      grid-column: 2 / 4;
    }
    .icon--128px {
      grid-row: 2 / 3;
      grid-column: 2 / 3;
    }
    .icon--32px {
      grid-row: 2 / 3;
      grid-column: 2 / 3;
      margin-left: calc(list.nth($macIcons, 4) + var(--u32));
    }
    .icon--16px {
      margin-top: calc(list.nth($macIcons, 5) + var(--u32));
      margin-left: calc(list.nth($macIcons, 4) + var(--u32));
      grid-row: 2 / 3;
      grid-column: 2 / 3;
    }
  }
  @mixin x2GridPortrait {
    grid-template-columns: 
      auto 
      calc(list.nth($macIcons, 2) / var(--density))
      calc(list.nth($macIcons, 3) / var(--density))
      auto;
    grid-template-rows: 
      calc(list.nth($macIcons, 1) / var(--density))
      calc(list.nth($macIcons, 3) / var(--density))
      auto;
    .icon--1024px {
      display: none;
    }
    .icon--512px {
      grid-row: 1 / 2;
      grid-column: 1 / 5;
    }
    .icon--256px {
      grid-row: 2 / 4;
      grid-column: 2 / 3;
    }
    .icon--128px {
      grid-row: 2 / 3;
      grid-column: 3 / 4;
    }
    .icon--32px {
      grid-row: 3 / 4;
      grid-column: 3 / 4;
      margin-left: 0;
    }
    .icon--16px {
      margin-top: 0;
      margin-left: calc(list.nth($macIcons, 5) + var(--u32));
      grid-row: 3 / 4;
      grid-column: 3 / 4;
    }
  }
  @include x1Grid;
  // magic number @ which point 512px set to auto is equal to the sum of the 256px icon 32px gap and 128px icon
  @media (orientation: landscape) {
    @include mixins.x2 {
      @include x2GridLandscape;
    }
  }
  @media (orientation: portrait) {
    @include mixins.x2 {
      @include x2GridPortrait;
    }
  }
}

@each $macIcon in $macIcons {
  .icon--mac.icon--#{$macIcon} {
    --width: $macIcon;
    width: var(--width);
    @include mixins.x3 {
      width: calc(var(--width) * 2/3);
      max-width: 100%;
      aspect-ratio: 1;
    }
  }
}

$icon32: (list.nth($macIcons, 5));

.case-study__toolbar-icons {
  display: flex;
  gap: var(--u32);
  .case-study-image--icons__icon {
    display: grid;
    flex-direction: column;
    gap: var(--u16);
    grid-template-rows: 
      calc(($icon32 * 2) / var(--density))
      calc($icon32 / var(--density));
  }  
}

.icon--32px--2x {
  width: calc(($icon32 * 2) / var(--density));
}

.icon--32px {
  width: calc(list.nth($macIcons, 5) / var(--density));
}
