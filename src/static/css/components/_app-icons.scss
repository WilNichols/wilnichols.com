@use 'sass:list';
@use 'sass:math';
@use '../tokens';

@mixin share($props.../*, $value */) {
  @for $i from 1 to list.length($props) {
    #{list.nth($props, $i)}: list.nth($props, -1);
  }
}

@mixin mask($mask) {
  $maskParam: url($mask);
  @include share(mask-image, -webkit-mask-image, $maskParam);
  @include share(mask-position, -webkit-mask-position, center center);
  @include share(mask-repeat, -webkit-mask-repeat, no-repeat);
  @include share(mask-size, -webkit-mask-size, contain);      
}

// redundant, but helps with readability
@mixin x1 {
  @media
    only screen and (min-pixel-ratio: 1),
    only screen and (min-device-pixel-ratio: 1),
    only screen and (min-device-pixel-ratio: 1),
    only screen and (min-resolution: 196dpi),
    only screen and (min-resolution: 1dppx) { 
    @content;
  }
}

@mixin x2 {
  @media
    only screen and (min-pixel-ratio: 2),
    only screen and (min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx) { 
    @content;
  }
}


@mixin x3 {
  @media
    only screen and (min-pixel-ratio: 3),
    only screen and (min-device-pixel-ratio: 3/1),
    only screen and (min-device-pixel-ratio: 3),
    only screen and (min-resolution: 288dpi),
    only screen and (min-resolution: 3dppx) { 
    @content;
  }
}

$gap: var(--u32);

// common 
%grid-init {
  display: inline-grid;
  font-size: 0;
  grid-template-columns: var(--template-columns, auto);
  grid-template-rows: var(--template-rows, auto);
  gap: $gap;
}

.icon {
  aspect-ratio: 1;
  display: block;
  min-width: var(--width);
  transform-origin: top left;
}


.icon-iterations-grid {
  display: grid;
  gap: var(--u24);
  grid-template-columns: repeat(4, 1fr);
  place-items: center;
}

$macIcons2x: 512, 256, 128, 32, 16;
$macIcons1x: 1024, 512, 256, 128, 32, 16;

@each $macIcon in $macIcons1x {
  .icon--mac.icon--#{$macIcon} {
    width: #{$macIcon + px};
  }
}

.icon-container--high-res {
  display: grid;
  place-content: center;
}

.icon-container--macOS--smaller {
  display: grid;
  grid-template-rows: 256px 32px auto;
  grid-template-columns: 128px auto;
  gap: 16px;
  justify-content: center;
  .icon--256 {
    grid-row: 1 / 2;
    grid-column: 1 / -1;
  }
  .icon--128 {
    grid-row: 2 / 4;
  }
  .icon--32 {
    grid-row: 2 / 3;
    grid-column: 2 / 3;
  }
  .icon--16 {
    grid-row: 3 / 4;
    grid-column: 2 / 3;
  }
}
// macOS Grid
.icon-grid--macOS {
  /*  There are separate grid for 1x and 2x+. Instead of defining them on a per-item basis, they're more verbosely defined as separate grids for readability. */
  /*  We also show macOS icons at their px size at 1-3x, unlike iOS icons which will show 1x and 2x at their real pixel size on 3x displays. */
  $icons: 512, 256, 128, 32, 16;
  @extend %grid-init;
  @include x1 {
    --template-columns: 
      1fr 
      #{list.nth($icons, 1)}px
      #{list.nth($icons, 2)}px  
      1fr;
    .icon--#{list.nth($icons, 1)}--2x {
      grid-column: 1 / 5;
      grid-row: 1 / 2;
      --width: #{list.nth($icons, 1) * 2}px;
    }
    .icon--#{list.nth($icons, 1)} {
      grid-column: 2 / 3;
      grid-row: 2 / 3;
      --width: #{list.nth($icons, 1)}px;
    }
    .icon--#{list.nth($icons, 2)} {
      grid-column: 3 / 4;
      grid-row: 2 / 3;
      --width: #{list.nth($icons, 2)}px;
    }
    $margin256: calc(#{$gap} + #{list.nth($icons, 2) + 'px'});
    $margin128: calc(#{$gap} + #{list.nth($icons, 3) + 'px'});
    .icon--#{list.nth($icons, 3)} {
      grid-column: 3 / 4;
      grid-row: 2 / 3;
      margin: $margin256 0 0 0;
      --width: #{list.nth($icons, 3)}px;
    }
    $margin32: calc(#{$gap} + #{list.nth($icons, 2) + 'px'});
    .icon--#{list.nth($icons, 4)} {
      grid-column: 3 / 4;
      grid-row: 2 / 3;
      margin:  $margin256 0 0 $margin128;
      --width: #{list.nth($icons, 4)}px;
    }
    $margin256plus48: calc(#{$gap} * 2 + #{list.nth($icons, 2) + 'px'} + #{list.nth($icons, 4) + 'px'});
    .icon--#{list.nth($icons, 5)} {
      grid-column: 3 / 4;
      grid-row: 2 / 3;
       margin: $margin256plus48 auto 0 $margin128;
      --width: #{list.nth($icons, 5)}px;
    }
  }
  @include x2 {
    --template-columns: 
      1fr 
      #{list.nth($icons, 2)}px 
      #{list.nth($icons, 3)}px
      1fr;
    // icons
    .icon--#{list.nth($icons, 1)}--2x {
      display: none;
    }
    .icon--#{list.nth($icons, 1)} {
      grid-column: 1 / 5;
      grid-row: 1 / 2;
      --width: #{list.nth($icons, 1)}px;
    }
    .icon--#{list.nth($icons, 2)} {
      grid-column: 2 / 3;
      grid-row: 2 / 5;
      --width: #{list.nth($icons, 2)}px;
    }
    .icon--#{list.nth($icons, 3)} {
      grid-column: 3 / 4;
      grid-row: 2 / 3;
      --width: #{list.nth($icons, 3)}px;
      margin: 0;
    }
    .icon--#{list.nth($icons, 4)} {
      grid-column: 3 / 4;
      grid-row: 3 / 4;
      margin: 0 0 auto 0;
      --width: #{list.nth($icons, 4)}px;
    }
    .icon--#{list.nth($icons, 5)} {
      grid-column: 3 / 4;
      grid-row: 3 / 4;
      margin: 0 0 auto calc(#{$gap} + #{list.nth($icons, 4) + 'px'});
      --width: #{list.nth($icons, 5)}px;
    }
  }
}

// iPhone Modern Grid
.icon-grid--iPhone--modern {
  /*  Icon sizes are 1x values, but graphics are only for 2x and 3x. */
  $icons: 512, 60, 40, 29;
  @extend %grid-init;
  // set icon sizes
  .icon {
    // basics
    --width: calc(var(--dimension) / var(--density, 1));
    width: var(--width);
    @include mask("/assets/img/iOSAppIconMask.svg");
    // force 512 size
    &--512 {
      --dimension: 1024px;
    }
    // set size for all others
    @each $icon in $icons {
      @if list.index($icons, $icon) != 1 {
        &--#{$icon} {
          --dimension: #{$icon}px;
        }
      }
    }
    // smaller gap between 3x and 2x icons
    &--2x { 
      margin-left: calc(-1 * var(--u16));
    }
    // force 1x scale
    @include x1 {
       &--2x {
         --density: .5;
       }
       &--3x {
         --density: calc(1/3);
       }
     }
    // scales icons for 2x
    @include x2 {
      &--2x {
        --density: 1;
      }
      &--3x {
        --density: calc(2/3);
      }
      // another exception
      &--29.icon--3x {
        --width: 87px !important;
        transform: scale(.5);
      }
      &--512 {
        --density: 2;
      }
    }
    // scales icons for 3x
    @include x3 {
      &--2x {
        --density: 1.5;
      } 
      &--3x {
        --density: 1;
      }
      &--29.icon--2x {
        transform: scale(calc(1/3));
        --width: 58px !important;
      }
      &--29.icon--3x {
        transform: scale(calc(1/3));
      }
      &--512 {
        transform: scale(calc(2/3));
      }
      &--512--container {
        @include share(width, height, math.div(list.nth($icons, 1) * 2, 3) + px);
      }
    }
  }
  
  // sets icon sizes and masks  
  @include x1 {
    --template-columns: 
        1fr 
        #{list.nth($icons, 2) * 3}px
        #{list.nth($icons, 2) * 2 - 16}px
        #{list.nth($icons, 3) * 3}px
        #{list.nth($icons, 3) * 2 - 16}px
        #{list.nth($icons, 4) * 3}px
        #{(list.nth($icons, 4) * 2) - 16}px
        1fr;
    .caption--app-store {
      margin-bottom: var(--u16);
    }
    .caption--app-icon, .caption--spotlight, .caption--settings {
      margin-bottom: calc(-1 * var(--u16));
    }
    .caption--app-icon {
      grid-column: 2 / 4;
      grid-row: 2 / 3;
    }
    .caption--spotlight {
      grid-column: 4 / 6;
      grid-row: 2 / 3;
    }
    .caption--settings {
      grid-column: 6 / 8;
      grid-row: 2 / 3;
    }
    .icon--#{list.nth($icons, 1)}--container {
      grid-column: 1 / 9;
      grid-row: 1 / 2;
      margin: 0 auto;
    }
    .icon--#{list.nth($icons, 2)}.icon--3x {
      grid-column: 2 / 3;
      grid-row: 3 / 4;
    }
    .icon--#{list.nth($icons, 2)}.icon--2x {
      grid-column: 3 / 4;
      grid-row: 3 / 4;
    }
    .icon--#{list.nth($icons, 3)}.icon--3x {
      grid-column: 4 / 5;
      grid-row: 3 / 4;
    }
    .icon--#{list.nth($icons, 3)}.icon--2x {
      grid-column: 5 / 6;
      grid-row: 3 / 4;
    }
    .icon--#{list.nth($icons, 4)}.icon--3x {
      grid-column: 6 / 7;
      grid-row: 3 / 4;
    }
    .icon--#{list.nth($icons, 4)}.icon--2x {
      grid-column: 7 / 8;
      grid-row: 3 / 4;
    }
  }
  @include x2 {
    --template-columns: 
      1fr 
      #{list.nth($icons, 2) * 1.5}px
      #{list.nth($icons, 2) - 16}px
      #{list.nth($icons, 3) * 1.5}px
      #{list.nth($icons, 3) - 16}px
      #{list.nth($icons, 4) * 1.5}px
      #{list.nth($icons, 4) - 16}px
      1fr;
  }
  @include x3 {
    $row512: math.div(list.nth($icons, 1), 3) + 32px;
    $col60: math.div(list.nth($icons, 2) * 2,3) - 16;
    $col40: math.div(list.nth($icons, 3) * 2,3) - 16;
    $col29: math.div(list.nth($icons, 4) * 2,3) - 16;
    --template-columns: 
      1fr 
      #{list.nth($icons, 2)}px
      #{$col60}px
      #{list.nth($icons, 3)}px
      #{$col40}px
      #{list.nth($icons, 4)}px
      #{$col29}px
      1fr;
    --template-rows: 
      #{math.div(list.nth($icons, 1) * 2, 3) + 32px}
      1fr
      ;
  }
}

// iPhone Modern Grid
.icon-grid--iOS--old {
  /*  Icon sizes are 1x values, but graphics are only for 2x and 3x. */
  $icons: 512, 72, 57, 29;
  @extend %grid-init;
  // set icon sizes
  .icon {
    // basics
    --width: calc(var(--dimension) / var(--density, 1));
    width: var(--width);
    @include mask("/assets/img/iOSAppIconOldMask.svg");
    // force 512 size
    &--512 {
      --dimension: 1024px;
    }
    // set size for all others
    @each $icon in $icons {
      @if list.index($icons, $icon) != 1 {
        &--#{$icon} {
          --dimension: #{$icon}px;
        }
      }
    }
    // smaller gap between 3x and 2x icons
    &--1x { 
      margin-left: calc(-1 * var(--u16));
    }
    // force 1x scale
    @include x1 {
       &--2x {
         --density: .5;
       }
       &--3x {
         --density: calc(1/3);
       }
     }
    // scales icons for 2x
    @include x2 {
      &--1x {
        --density: 2;
      }
      &--2x {
        --density: 1;
      }
      // another exception
      &--57.icon--1x {
        --width: 57px !important;
        transform: scale(.5);
      }
      // another exception
      &--29.icon--1x {
        --width: 29px !important;
        transform: scale(.5);
      }
      &--512 {
        --density: 2;
      }
    }
    // scales icons for 3x
    @include x3 {
      &--2x {
        --density: 1.5;
      } 
      &--3x {
        --density: 1;
      }
      &--29.icon--2x {
        transform: scale(calc(1/3));
        --width: 58px !important;
      }
      &--29.icon--3x {
        transform: scale(calc(1/3));
      }
      &--512 {
        transform: scale(calc(2/3));
      }
      &--512--container {
        @include share(width, height, math.div(list.nth($icons, 1) * 2, 3) + px);
      }
    }
  }
  
  // sets icon sizes and masks  
  @include x1 {
    --template-columns: 
        1fr 
        #{list.nth($icons, 2) * 2}px
        #{list.nth($icons, 2)}px
        #{list.nth($icons, 3) * 2}px
        #{list.nth($icons, 3)}px
        #{list.nth($icons, 4) * 2}px
        #{list.nth($icons, 4) - 16}px
        1fr;
    .caption--app-store {
      margin-bottom: var(--u16);
    }
    .caption--iPad-app, .caption--iPhone-app, .caption--settings {
      margin-bottom: calc(-1 * var(--u16));
    }
    .caption--iPad-app {
      grid-column: 2 / 4;
      grid-row: 2 / 3;
    }
    .caption--iPhone-app {
      grid-column: 4 / 6;
      grid-row: 2 / 3;
    }
    .caption--settings {
      grid-column: 6 / 8;
      grid-row: 2 / 3;
    }
    .icon--#{list.nth($icons, 1)}--container {
      grid-column: 1 / 9;
      grid-row: 1 / 2;
      margin: 0 auto;
    }
    .icon--#{list.nth($icons, 2)}.icon--2x {
      grid-column: 2 / 3;
      grid-row: 3 / 4;
    }
    .icon--#{list.nth($icons, 2)}.icon--1x {
      grid-column: 3 / 4;
      grid-row: 3 / 4;
    }
    .icon--#{list.nth($icons, 3)}.icon--2x {
      grid-column: 4 / 5;
      grid-row: 3 / 4;
    }
    .icon--#{list.nth($icons, 3)}.icon--1x {
      grid-column: 5 / 6;
      grid-row: 3 / 4;
    }
    .icon--#{list.nth($icons, 4)}.icon--2x {
      grid-column: 6 / 7;
      grid-row: 3 / 4;
    }
    .icon--#{list.nth($icons, 4)}.icon--1x {
      grid-column: 7 / 8;
      grid-row: 3 / 4;
    }
  }
  @include x2 {
    --template-columns: 
      1fr 
      #{list.nth($icons, 2)}px
      #{list.nth($icons, 2) * .5 - 16}px
      #{list.nth($icons, 3)}px
      #{list.nth($icons, 3) * .5 - 16}px
      #{list.nth($icons, 4)}px
      0px
      1fr;
  }
  @include x3 {
    $row512: math.div(list.nth($icons, 1), 3) + 32px;
    $col60: math.div(list.nth($icons, 2),3);
    $col40: math.div(list.nth($icons, 3),3);
    $col29: 0;
    --template-columns: 
      1fr 
      48px
      8px
      38px
      3px
      20px
      0px
      1fr;
    --template-rows: 
      #{math.div(list.nth($icons, 1) * 2, 3) + 32px}
      1fr
    ;
  }
}









// pre-iOS-7 grid
.icon-grid--old {
  @extend %grid-init;
  gap: var(--u20);
  overflow: visible;
  // these are _specifically_ made for the pixel density of the viewing device.
  --gridTemplCol: 
    auto 
    calc(var(--appStore2xIconSize) / 2) 
    calc(var(--appStore2xIconSize) / 2) 
    auto
  ;
  grid-template-rows: auto;
  --appIcon29: 58px;
  --appIcon29-2x: 29px;
  --appIcon29-3x: calc(58px/3);
  --appIcon57: 114px;
  --appIcon57-2x: 57px;
  --appIcon57-3x: 38px;
  --appIcon72: 144px;
  --appIcon72-2x: 72px;
  --appIcon72-3x: 48px;
  --appIcon512: 512px;
  --appIcon512-2x: 256px;
  --appIcon512-3x: calc(512px/3);
  --appIcon1024: 1024px;
  --appIcon1024-2x: 512px;
  --appIcon1024-3x: calc(1024px/3);
  @media (-webkit-min-device-pixel-ratio: 1), (min-resolution: (91dpi)) { 
    --appStore2xIconSize: min(calc(100vw - var(--u48)*2), var(--appIcon512));
    --appStoreIconSize: min(calc(100vw - var(--u48)*2), var(--appIcon512));
    --iPadIconSize: var(--appIcon72);
    --iPhoneIconSize: var(--appIcon57);
    --SettingsIconSize: var(--appIcon29);
  }
  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: (182dpi)) { 
    --appStore2xIconSize: var(--appIcon1024-2x);
    --appStoreIconSize: var(--appIcon512-2x);
    --iPadIconSize: var(--appIcon72-2x);
    --iPhoneIconSize: var(--appIcon57-2x);
    --SettingsIconSize: var(--appIcon29-2x);
  }
  @media (-webkit-min-device-pixel-ratio: 3), (min-resolution: (273dpi)) { 
    --appStore2xIconSize: var(--appIcon1024-3x);
    --appStoreIconSize: var(--appIcon512-3x);
    --iPadIconSize: var(--appIcon72-3x);
    --iPhoneIconSize: var(--appIcon57-3x);
    --SettingsIconSize: var(--appIcon29-3x);
  }
  & > * {
    overflow: visible;
    grid-column: var(--gridCol);
    grid-row: var(--gridRow);
  }
  .icon--hd {
    --gridCol: 1 / 5;
    --gridRow: 1 / 2;
    @media (-webkit-min-device-pixel-ratio: 1), (min-resolution: (91dpi)) { 
      display: none;
    }
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: (182dpi)) { 
      display: block;
    }
  } 
  .icon--app-store {
    // if alone
    --gridCol: 2 / 3;
    --gridRow: 2 / 6;
    @media #{tokens.max('sm')} {
        --gridCol: 1 / 6;
        --gridRow: 1 / 2;
    }
  } 
  .icon--iPad-home-screen {
    --gridCol: 3 / 4;
    --gridRow: 2 / 3;
  } 
  .icon--iPhone-home-screen {
    --gridCol: 3 / 4;
    --gridRow: 3 / 4;
  } 
  .icon--settings {
    --gridCol: 3 / 4;
    --gridRow: 4 / 5;
  } 
  h6 {
    margin-bottom: var(--u4);
  }
}


// iOS Grid
.icon--iOS {
  $mask: url("/assets/img/iOSAppIconMask.svg");
  @include mask("/assets/img/iOSAppIconMask.svg");
  &.icon--home-screen--3x {
    @include share(width, height, var(--dimension, 180px));
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: (182dpi)) { 
      --dimension: 90px;
    }
    @media (-webkit-min-device-pixel-ratio: 3), (min-resolution: (273dpi)) { 
      --dimension: 60px;
    }
  }
}
.icon--iOS--old {
  @include mask("/assets/img/iOSAppIconOldMask.svg");   
  &.icon--29 {
    width: var(--dimension, 29px);
    transform-origin: top left;
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: (182dpi)) { 
      transform: scale(.5);
    }
    @media (-webkit-min-device-pixel-ratio: 3), (min-resolution: (273dpi)) { 
      transform: scale(calc(1/3));
    }
  }  
  &.icon--29--2x {
    width: var(--dimension, 58px);
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: (182dpi)) { 
      --dimension: 29px;
    }
    @media (-webkit-min-device-pixel-ratio: 3), (min-resolution: (273dpi)) { 
      --dimension: calc(58px/3);
    }
  }  
  &.icon--50 {
    width: var(--dimension, 50px);
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: (182dpi)) { 
      --dimension: 25px;
    }
    @media (-webkit-min-device-pixel-ratio: 3), (min-resolution: (273dpi)) { 
      --dimension: calc(50px/3);
    }
  }   
  &.icon--57 {
    width: var(--dimension, 57px);
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: (182dpi)) { 
      --dimension: calc(57px/2);
    }
    @media (-webkit-min-device-pixel-ratio: 3), (min-resolution: (273dpi)) { 
      --dimension: 19px;
    }
  }   
  &.icon--57--2x {
    width: var(--dimension, 114px);
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: (182dpi)) { 
      --dimension: 57px;
    }
    @media (-webkit-min-device-pixel-ratio: 3), (min-resolution: (273dpi)) { 
      --dimension: 38px;
    }
  }
  &.icon--72 {
    width: var(--dimension, 72px);
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: (182dpi)) { 
      --dimension: 36px;
    }
    @media (-webkit-min-device-pixel-ratio: 3), (min-resolution: (273dpi)) { 
      --dimension: 24px;
    }
  }
  &.icon--72--2x {
    width: var(--dimension, 144px);
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: (182dpi)) { 
      --dimension: 72px;
    }
    @media (-webkit-min-device-pixel-ratio: 3), (min-resolution: (273dpi)) { 
      --dimension: 48px;
    }
  }
  &.icon--512 {
    --dimension: min(calc(100vw - var(--u48)*2), var(--dimensionMax));
    width: var(--dimension);
    @media (-webkit-min-device-pixel-ratio: 1), (min-resolution: (91dpi)) { 
      --dimensionMax: 512px;
    }
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: (182dpi)) { 
      --dimensionMax: 256px;
    }
    @media (-webkit-min-device-pixel-ratio: 3), (min-resolution: (273dpi)) { 
      --dimensionMax: calc(512px/3);
    }
  }
  &.icon--1024 {
    --dimension: min(calc(100vw - var(--u48)*2), var(--dimensionMax));
    width: var(--dimension);
    @media (-webkit-min-device-pixel-ratio: 1), (min-resolution: (91dpi)) { 
      --dimensionMax: 1024px;
    }
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: (182dpi)) { 
      --dimensionMax: 512px;
    }
    @media (-webkit-min-device-pixel-ratio: 3), (min-resolution: (273dpi)) { 
      --dimensionMax: calc(1024px/3);
    }
  }
  &.icon--home-screen--2x {
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: (182dpi)) { 
      --dimension: 72px; //2x
    }
    @media (-webkit-min-device-pixel-ratio: 3), (min-resolution: (273dpi)) { 
      --dimension: 48px; //1x
    }
  }
}


.icon-grid--nested {
  display: grid;
  grid-template-rows: var(--u24) auto;
  grid-template-columns: auto;
  column-gap: var(--u20);
  // prevents child cols from stretching
  margin-right: auto;
  .overline {
    grid-row: 1 / 2;
    grid-column: 1 / span all;
  }
  &.icon--app-store &, &.icon--hd & {
    grid-template-columns: 1fr;
  }
  img {
    grid-row: 2 / 3;
    margin-right: auto;
  }
  
}

.toolbar-icons {
  display: flex;
  flex-direction: row;
  gap: var(--u16);
}