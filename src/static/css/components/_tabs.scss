@use '../tokens';

@include tokens.textStyles;

.tabs__state {
  display: none;
}

%selectedTab {
  display: block;
}
%selectedPanel {
  display: block;
}

@for $i from 1 through 5 {
  $tab: "[data-tab-index='tab-#{$i}']";
  #{$tab}:target {
    // selected tab in toolbar
    ~ * .tabs__tab#{$tab} {
      @extend %selectedTab;
    }
    // selected tab pane
    ~ * .tabs__panes__content#{$tab} {
      @extend %selectedPanel;
    }
  }
}

// Default selected tab
$default-tab: "[data-tab-index='tab-1']";

// for the default tab without a following :target item
#{$default-tab}:not(:has(~ *:target)) {
  ~ * .tabs__tab#{$default-tab} {
    @extend %selectedTab;
  }
  // selected tab pane
  ~ * .tabs__panes__content#{$default-tab} {
    @extend %selectedPanel;
  }
}
 
.tabs__panes__content {
  display: none;
}
  
.tabs-container {
  border-radius: .6rem;
  position: relative;
  overflow: hidden;
  margin: 1em auto 0;
  box-shadow: inset 0 0 0 var(--px) var(--edgeColor);
  background-color: var(--materialPrimaryHoverColor);
}

.content-body {
  .tabs__panes {
    grid-row: 2;
    overflow: auto;
    padding: 0;
    margin: 0;
  }
  
  .tabs__toolbar {
    display: inline-flex;
    position: absolute;
    grid-row: 1;
    box-shadow: 0 1px 2px black;
    list-style: none;
    padding: 0;
    inset: .2rem .2rem auto auto;
    border-radius: .4rem;
    background-color: var(--materialElevatedPrimaryColor);
  }
  
  .tabs__tab {
    & {
      font-size: 10pt;
      padding: 0 8px;
      margin: 0 !important;
    }
    a {
      text-decoration: none;
      @extend %font--display-medium;
      color: var(--contentPrimaryColor) !important;
    }
  }
  
  .tabs__panes__content {
    & {
      overflow: hidden;
      max-width: tokens.$width;
      margin: 0 !important;
    }
    pre, code {
      max-width: tokens.$width;
    }
  }
}
