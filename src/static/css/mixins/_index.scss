@use 'sass:list';
@use '../tokens';

@mixin x1 {
  @media
    only screen and (min-pixel-ratio: 1),
    only screen and (min-device-pixel-ratio: 1),
    only screen and (min-device-pixel-ratio: 1),
    only screen and (min-resolution: 196dpi),
    only screen and (min-resolution: 1dppx) { 
    @content;
  }
}

@mixin x2 {
  @media
    only screen and (min-pixel-ratio: 2),
    only screen and (min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx) { 
    @content;
  }
}

@mixin x3 {
  @media
    only screen and (min-pixel-ratio: 3),
    only screen and (min-device-pixel-ratio: 3/1),
    only screen and (min-device-pixel-ratio: 3),
    only screen and (min-resolution: 288dpi),
    only screen and (min-resolution: 3dppx) { 
    @content;
  }
}

@mixin share($props.../*, $value */) {
  @for $i from 1 to list.length($props) {
    #{list.nth($props, $i)}: list.nth($props, -1);
  }
}

@mixin mask($mask) {
  $maskParam: url($mask);
  @include share(mask-image, -webkit-mask-image, $maskParam);
  @include share(mask-position, -webkit-mask-position, center center);
  @include share(mask-repeat, -webkit-mask-repeat, no-repeat);
  @include share(mask-size, -webkit-mask-size, contain);     
}

@mixin imagex3($image, $extension) {
  background-image: url($image + "." + $extension);
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) { 
    background-image: url($image + "@2x." + $extension);
  }
  @media (min--moz-device-pixel-ratio: 2.6), (-o-min-device-pixel-ratio: 5.2 / 2), (-webkit-min-device-pixel-ratio: 2.6), (min-device-pixel-ratio: 2.6), (min-resolution: 2.6dppx) { 
    background-image: url($image + "@3x." + $extension);
  }
}

@mixin smartPhone {
  @media (width <= tokens.$breakpoint) and (pointer: coarse) {
    @content;
  }
}