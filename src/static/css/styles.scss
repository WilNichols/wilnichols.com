@use 'sass:math';
@use 'color';
@use 'syntax';

@mixin light-dark($prop, $lightColor, $darkColor: $lightColor) {
  #{$prop}: $lightColor;
  @media (prefers-color-scheme: dark) {
    #{$prop}: $darkColor;
  }
}

* {
  box-sizing: border-box;
}

// Typography. This isn't _the_ solution — I haven't tried much with fluid scales yet, but it's _a_ solution for now. 
/* @link https://utopia.fyi/type/calculator?c=320,17,1.2,1200,20,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */

:root {
  // type
  --type--2: clamp(0.7378rem, 0.7152rem + 0.113vi, 0.8rem);
  --type--1: clamp(0.8854rem, 0.8438rem + 0.2083vi, 1rem);
  --type-0: clamp(1.0625rem, 0.9943rem + 0.3409vi, 1.25rem);
  --type-1: clamp(1.275rem, 1.1705rem + 0.5227vi, 1.5625rem);
  --type-2: clamp(1.53rem, 1.3761rem + 0.7693vi, 1.9531rem);
  --type-3: clamp(1.836rem, 1.6159rem + 1.1007vi, 2.4414rem);
  --type-4: clamp(2.2032rem, 1.8946rem + 1.5428vi, 3.0518rem);
  --type-5: clamp(2.6438rem, 2.2181rem + 2.1288vi, 3.8147rem);
  // colors
  @include light-dark(--materialPrimaryColor, var(--c100), var(--c0));
  @include light-dark(--materialPrimaryInvertedColor, var(--c0), var(--c100));
  @include light-dark(--materialPrimaryHoverColor, var(--cK95), var(--cK5));
  @include light-dark(--materialSecondaryColor, var(--cK95a), var(--cK5d));
  @include light-dark(--materialSecondaryHoverColor, var(--cK90), var(--cK10));
  @include light-dark(--contentPrimaryColor, var(--cK5), var(--c100));
  @include light-dark(--contentPrimaryInvertedColor, var(--c100), var(--cK5));
  @include light-dark(--contentSecondaryColor, var(--cK50), var(--cK60));
  @include light-dark(--contentTertiaryColor, var(--cK70), var(--cK40));
  @include light-dark(--linkColor, var(--cB30), var(--cB50));
  @include light-dark(--linkVisitedColor, var(--cP30), var(--cP50));
  @include light-dark(--tagBackgroundColor, var(--cK90), var(--cK20));
  @include light-dark(--tagBorderColor, var(--cK80), var(--cK30));
  @include light-dark(--tagContentColor, var(--cK30), var(--cK90));
  @include light-dark(--evergreenBackgroundColor, var(--cG90), var(--cG20));
  @include light-dark(--evergreenBorderColor, var(--cG80), var(--cG30));
  @include light-dark(--evergreenContentColor, var(--cG30), var(--cG90));
  @include light-dark(--evergreenVersionBackgroundColor, var(--cG40), var(--cG50));
  @include light-dark(--evergreenVersionBorderColor, var(--cG30), var(--cG60));
  @include light-dark(--evergreenVersionContentColor, var(--c100), var(--c0abs));
  @include light-dark(--edgeColor, var(--cK80a), var(--cK10d));
  @include light-dark(--shadowMultiplier, 1, 2);
  // layout
  --px: calc(1px / var(--density, 1));
  @media (-webkit-min-device-pixel-ratio: 2) {
    --density: 2;
  }
  @media (-webkit-min-device-pixel-ratio: 3) {
    --density: 3;
  }
  --col: calc(100dvw/12);
}

$width: calc(30 * var(--type-0));
$breakpoint: 480px;

%font--display-regular {
  font-family: "neue-haas-grotesk-display", sans-serif;
  font-weight: 500;
  font-style: normal;
}

%font--display-medium {
  font-family: "neue-haas-grotesk-display", sans-serif;
  font-weight: 600;
  font-style: normal;
}

%font--display-black {
  font-family: "neue-haas-grotesk-display", sans-serif;
  font-weight: 900;
  font-style: normal;
}

%font--text-regular {
  font-family: "neue-haas-grotesk-text", sans-serif;
  font-weight: 400;
  font-style: normal;
}

%font--text-regular--italic {
  font-family: "neue-haas-grotesk-text", sans-serif;
  font-weight: 400;
  font-style: italic;
}

%font--text-italic {
  font-family: "neue-haas-grotesk-text", sans-serif;
  font-weight: 500;
  font-style: normal;
}

body {
  font-size: var(--type-0);
  line-height: 1.2em;
  @extend %font--text-regular;
  // display: grid;
  // justify-content: center;
  // align-content: start;
  --rounding-interval: 1px;
  padding: var(--col);
  margin: 0;
  min-height: 100dvh;
  background-color: var(--materialPrimaryColor);
  color: var(--contentPrimaryColor);
  scrollbar-gutter: stable both-edges;
}

h1, h2, h3, h4, h5, h6, p, span {
  font-size: 1em;
  // line-height: 1.5em;
  font-weight: unset;  
  margin: 0;
  padding: 0;
}

ol, ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

p:last-child {
  margin-bottom: 0;
}

h1, h2, h3, h4, h5, h6, .note-title {  
  max-width: $width;
  text-wrap: balance;
}

p {
  max-width: $width;
  margin: 0 auto 1em auto;
  text-wrap: pretty;
}

a {
  color: var(--contentPrimaryColor);
  p &, .page-info & {
    color: var(--linkColor);
    &:visited {
      color: var(--linkVisitedColor);
    }
  }
}

main {
  overflow: hidden;
}

.note__header {
  display: inline-flex;
  flex-direction: column;
  h1 {
    margin: 0;
  }
}

@for $i from 1 through 6 {
  .heading--#{$i} {
    // margin: 0 0 .25em 0;
    font-size: var(--type-#{$i * 6 - $i});
    @extend %font--display-medium;
  }
}

.heading--1 {
  line-height: 1em;
  margin: 0 0 .25em 0;
}

.page__title {
  @extend .heading--1;
  @extend %font--display-black;
}

.page__subtitle {
  font-size: var(--type--1);
  @extend %font--text-regular;
  display: block;
  color: var(--contentSecondaryColor);
}

.note__body > *, .pen__body > * {
  line-height: 1.5em;
  &:not(:last-child) {
    margin: 0 auto 1em auto;
  }
}

.album__album-photos {
  display: flex;
  flex-direction: column;
  gap: calc(var(--col) / 2);
  padding: 0 calc(var(--col) / 2);
  box-sizing: content-box;
}

.album__album-photos__photo {
  display: flex;
  place-content: center;
  picture {
    display: block;
    aspect-ratio: var(--ratio);
    background-color: var(--color);
    height: 100%;
    max-height: calc(100dvh - 32px);
  }
  img {
    display: block;
    width: 100%;
    height: 100%;
    overflow: hidden;

  } 
}

$t: .2s;

%listItemBackground::before {
  content: '';
  z-index: 0;
  position: absolute;
  inset: -6px -8px;
  border-radius: .6em;
  background-color: var(--materialPrimaryHoverColor);
  opacity: 0;
  will-change: opacity;
  filter: blur(.3em);
  $t: $t * 4;
  transition: $t opacity ease-out, $t filter ease-out;
}

%listItemBackgroundHover::before {
  opacity: 1;
  filter: blur(0);
  transition-duration: math.div($t, 4);
}

%listItemBackgroundActive {
  scale: .99;
}
  
.backlinks {
  max-width: $width;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: var(--type--2);
  .note__body + & {
    margin-top: 1em;
  }
}

.backlinks__title {
  font-size: var(--type--1);
  @extend %font--display-medium;
  color: var(--contentSecondaryColor);
}

.backlinks__list {
  padding: 0;
  margin: 0;
  display: flex;
  gap: var(--type-0);
  flex-wrap: wrap;
}

.backlink__container {
  @media screen and (min-width: 415px) {
    width: calc(50% - var(--type-0));
  }
}


%linkBackground {
  $pV: 8px;
  $pH: 12px;
  display: inline-flex;
  flex-direction: column;
  gap: var(--type--2);
  font-size: var(--type--2);
  border-radius: 12px;
  padding: $pV $pH;
  margin: 0 0 0 #{-$pH};
  overflow: hidden;
  position: relative; 
  text-decoration: none;
  @extend %listItemBackground;
}
.backlink {
  @extend %linkBackground;
  &:hover {
    @extend %listItemBackgroundHover;
  }
  &:active {
    @extend %listItemBackgroundActive;
  }
  > * {
    z-index: 1;
  }
}

.backlink__title {
  font-size: var(--type--1);
  @extend %font--display-medium;
}

.backlink__title, .backlink__preview {
  color: var(--contentPrimaryColor);
}

.backlink__preview {
  @media screen and (min-width: 415px) {
    -webkit-line-clamp: 3;
    text-overflow: ellipsis;
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical; 
  }
}

$note-title-gap: .25em; // the size of a monospaced space character in Neue Haas Grotesk

.note-list {
  grid-column: 2 / 3;
  display: grid;
  grid-template-columns: min-content auto;
  row-gap: 1.2em;
  column-gap: $note-title-gap;
  // TODO: extract this
  max-width: 400px;
  @media (width <= $breakpoint) {
    grid-column: 1 / -1;
    max-width: unset;
    width: 100%;
  }
}

.note-group__month {
  display: flex;
  flex-direction: row-reverse;
}

.note__month {
  width: 100%;
}

.note__month, .note__year {
  @extend .heading--6;
  @extend %font--display-medium;
}

.note__year, .note__month, .note__day {
  color: var(--contentSecondaryColor);
}

.note__accessories {
  display: flex;
  flex-direction: row-reverse;
  gap: 5px;
  min-height: 1.2em;
  line-height: 1.2em;
  align-items: center;
  > li {
    display: contents;
  }
}

.note__type {
  $r: 4px;
  $p: 3px 5px;
  position: relative;
  display: inline-flex;
  justify-self: flex-end;
  // height: 16px;
  line-height: 100%;
  border-radius: $r;
  background-color: var(--tagBackgroundColor);
  color: var(--tagContentColor);
  box-shadow: inset 0 0 0 var(--px) var(--tagBorderColor);
  font-size: 8pt;
  padding: $p;
  letter-spacing: 1px;
  text-transform: uppercase;
  @extend %font--display-medium; 
  gap: 5px;
  overflow: clip;
  user-select: none;
  -webkit-user-select: none;
  &--evergreen {
    background-color: var(--evergreenBackgroundColor);
    color: var(--evergreenContentcolor);
    box-shadow: inset 0 0 0 var(--px) var(--evergreenBorderColor);
    &[data-version]::after {
      content: attr(data-version);
      padding: $p;
      margin: -3px -5px -3px -2px;
      background-color: var(--evergreenVersionBackgroundColor);
      color: var(--evergreenVersionContentColor);
      box-shadow: inset 0 0 0 var(--px) var(--evergreenVersionBorderColor);
      border-radius: 0 $r $r 0;
    }
  }
}

.note-list .note {
  // necessary for subgrid
  display: contents;
}

.note__link, .note-group__month {
  grid-column: 1 / -1;
}

.note-list__copyright {
  display: grid;
  grid-template-columns: subgrid;
  grid-column: 1 / -1;
  gap: 5px;
  .copyright__glyph {
    color: var(--contentTertiaryColor);
    text-align: right;
  }
  .copyright__text {
    color: var(--contentSecondaryColor);
    grid-column: 2 / 4;
  }
  .copyright__glyph, .copyright__text {
    font-size: var(--type--2);
    line-height: 1em;
  }
}

.note__link {
  display: grid;
  grid-template-columns: subgrid;
  text-decoration: none;
  align-items: flex-start;
  color: var(--contentPrimaryColor);
  position: relative;
  row-gap: 2px; // this is a const because it looks better
  @extend %listItemBackground;
  // give more space for title if no accessories
  .note__title {
    grid-column: 2 / 4;
  }  
  &--with-accessories .note__title {
    grid-column: 2 / 3;
  }
  // prevents flickering with animated pseudo element
  .note__day, .note__title {
    z-index: 1;
  }
  .note__day, .note__title, .note__accessories  {
    transition: $t transform ease-out, $t background-color ease-out;
  }
  &:hover {
    @extend %listItemBackgroundHover;
    $d: .25ex;
    .note__day, .note__title {
      transform: translateX($d);
    }
    .note__accessories {
      transform: translateX(-$d);
    }
    .note__day, .note__title, .note__accessories {
      transition-duration: math.div($t, 4); 
    }
  }
  &:active {
    @extend %listItemBackgroundActive;
  }
}

.note__preview {
  display: flex;
  grid-column: 1 / -1;
  z-index: 1;
  position: relative;
  margin: 2px 0 6px 0; // this offsets the hover effects asymmetrical offsets
  border-radius: 4px;
  box-shadow: 
    0px 6px 12px 1px transparent, 
    0px 1.8px 3.6px 1px transparent, 
    0px 0.76px 1.52px 1px transparent, 
    0px 0.28px 0.56px 1px transparent;
  transition: $t box-shadow ease-out;
  
  > * {
    aspect-ratio: 4 / 3;
    border-radius: 4px;
    // apply to the child to avoid clipping on subpixels
  }
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 4px;
    $s: 0 0 0 var(--px) var(--edgeColor);
    box-shadow: inset $s;
    opacity: 1;
    transition: $t opacity ease-out;
  }
  .note__link:hover & {
    box-shadow: 
      0px 6px 12px 1px rgba(0, 0, 0, calc(0.05 * var(--shadowMultiplier, 1))), 
      0px 1.8px 3.6px 1px rgba(0, 0, 0, calc(0.03 * var(--shadowMultiplier, 1))), 
      0px 0.76px 1.52px 1px rgba(0, 0, 0, calc(0.025 * var(--shadowMultiplier, 1))), 
      0px 0.28px 0.56px 1px rgba(0, 0, 0, calc(0.017 * var(--shadowMultiplier, 1)));
    transition-duration: math.div($t, 4);
    &::before {
      transition-duration: inherit;
      opacity: 0;
    }
  }
}

.note__preview__poster {
  width: 100%;
  height: auto;
  background-size: 100%;
  background-color: var(--materialPrimaryColor);
  &.themed-3x {
    background-image: var(--lightPoster);
    @media (-webkit-min-device-pixel-ratio: 2) {
      background-image: var(--lightPoster2x);
    }
    @media (-webkit-min-device-pixel-ratio: 3) {
      background-image: var(--lightPoster3x);
    }
    @media (prefers-color-scheme: dark) {
      background-image: var(--darkPoster);
      @media (-webkit-min-device-pixel-ratio: 2) {
        background-image: var(--darkPoster2x);
      }
      @media (-webkit-min-device-pixel-ratio: 3) {
        background-image: var(--darkPoster3x);
      }
    }
  }
}

.note__day {
  font-variant-numeric: tabular-nums;
  text-decoration: none;
  text-align: right;
  &--hidden {
    visibility: hidden; 
  }
}

.note__title {
  padding: 0 $note-title-gap 0 0;
}

.page {
  display: grid;
  width: auto;
  // min-height: 100dvh;
  column-gap: 2.4em;
  row-gap: 1.2em;
  @media (width <= $breakpoint) {
    align-content: start;
  }
}

.page--notes {
  grid-template-columns: min-content minmax(320px, max-content);
  align-items: start;
  justify-content: center;
  @media (width <= $breakpoint) {
    grid-template-columns: 100%;
    grid-template-rows: min-content auto;
  }
}

.page--note, .page--pen {
  grid-template-columns: auto minmax(auto, $width);
  @media (width <= $breakpoint) { 
    grid-template-columns: 100%;
  }
  grid-template-rows: auto;
  justify-content: center;
}

.page--note {
  .back-to-index {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
  }
  .page-info {
    grid-column: 1 / 2;
    grid-row: 1 / 3;
    @media (width <= $breakpoint) { 
      grid-column: 1 / -1;
      grid-row: 2 / 3;
    }
  }
  .note__header {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
    @media (width <= $breakpoint) { 
      grid-column: 1 / -1;
    }
  }
  .note__body {
    grid-column: 2 / 3;
    grid-row: 2 / 3;
    @media (width <= $breakpoint) { 
      grid-column: 1 / -1;
      grid-row: 3 / 4;
    }
  }
}

.page--pen {
  .back-to-index {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
  }
  .page-info {
    grid-column: 1 / 2;
    grid-row: 1 / 3;
    @media (width <= $breakpoint) { 
      grid-column: 1 / -1;
      grid-row: 2 / 3;
    }
  }
  .note__header {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
    @media (width <= $breakpoint) { 
      grid-column: 1 / -1;
      grid-row: 1 / 2;
    }
  }
  .pen__body {
    grid-column: 2 / 3;
    grid-row: 2 / 3;
    @media (width <= $breakpoint) { 
      grid-column: 1 / -1;
      grid-row: 3 / 4;
    }
  }
}

.nav__title {
  @extend %font--display-black;
  line-height: 1.2em;
}

.navigation {
  position: sticky;
  top: var(--col);
  @media (width <= $breakpoint) {
    position: static;
    &::before, &::after {
      content: '';
      position: absolute;
      z-index: 10;
      width: var(--col);
      height: calc(2 * var(--col) + 1rem);
      inset: 0;
    }
    &::before {
      right: auto;
      background-image: linear-gradient(90deg, var(--materialPrimaryColor), transparent);
    }
    &::after {
      left: auto;
      background-image: linear-gradient(-90deg, var(--materialPrimaryColor), transparent);
    }
    > * {
      z-index: 1;
    }
  }
}

.navigation__items {
  display: flex;
  flex-direction: column;
  gap: 1.2em;
  align-items: flex-end;
  @media (width <= $breakpoint) {
    flex-direction: row;
    justify-content: space-between;
    position: relative;
    $inset: calc(-1 * var(--col));
    inset: $inset $inset auto $inset;
    width: 100dvw;
    // fix for scrollbar overlap. 
    $offset: 24px;
    padding: var(--col) var(--col) $offset var(--col);
    margin-bottom: -$offset;
    overflow: auto;
    &::-webkit-scrollbar { 
      display: none;
    }
  }
}

@media (width <= $breakpoint) {
  .nav__title-container {
    margin: 0 auto 0 0;
  }
}

.nav__link {
  text-decoration: none;
  position: relative;
  @extend %listItemBackground;
  transition: $t transform ease-out;
  &:not(.nav__link--current):hover {
    @extend %listItemBackgroundHover;
  }
  &.nav__link--current {
    @extend %listItemBackground;
    &::before {
      background-color: var(--materialPrimaryInvertedColor);
      opacity: 1;
      filter: none;
    }
    span {
      color: var(--contentPrimaryInvertedColor);
    }
  }
  span {
    z-index: 10;
    position: relative;
  }
}

.pen-tabs__state {
  display: none;
}


%selectedTab {
  display: block;
  background-color: var(--materialPrimaryColor);
  box-shadow: 
    var(--px) 0 0 var(--edgeColor), 
    calc(-1 * var(--px)) 0 0 var(--edgeColor),
    0 var(--px) 0 var(--materialPrimaryColor);
}
%selectedPanel {
  display: block;
  background-color: var(--materialPrimaryColor);
}
@for $i from 1 through 5 {
  $tab: "[data-tab-index='tab-#{$i}']";
  #{$tab}:target {
    // selected tab in toolbar
    ~ * .pen-tabs__tab#{$tab} {
      @extend %selectedTab;
    }
    // selected tab pane
    ~ * .pen-tabs__panes__content#{$tab} {
      @extend %selectedPanel;
    }
  }
}
// Default selected tab
$default-tab: "[data-tab-index='tab-1']";

// for the default tab without a following :target item
#{$default-tab}:not(:has(~ *:target)) {
  ~ * .pen-tabs__tab#{$default-tab} {
    @extend %selectedTab;
  }
  // selected tab pane
  ~ * .pen-tabs__panes__content#{$default-tab} {
    @extend %selectedPanel;
  }
}
 
.pen-tabs__panes__content {
  display: none;
}

.pen__demo {
  $r: 4px;
  border-radius: $r;
  position: relative;
  aspect-ratio: 16/9;
  overflow: clip;
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: $r;
    $s: 0 0 0 var(--px) var(--edgeColor);
    box-shadow: inset $s, $s;
    user-select: none;
    pointer-events: none;
  }
  iframe {
    border: 0;
    width: 100%;
    height: 100%;
  }
}
  
.pen-tabs-container {
  $r: 4px;
  border-radius: $r;
  display: grid;
  row-gap: var(--px);
  background-clip: border-box;  
  position: relative;
  background-color: var(--materialSecondaryColor);
  overflow: hidden;
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: $r;
    $s: 0 0 0 var(--px) var(--edgeColor);
    box-shadow: inset $s, $s;
    user-select: none;
    pointer-events: none;
  }
}

.pen-tabs__panes {
  grid-row: 2;
  overflow: auto;
}

.pen-tabs__toolbar {
  display: flex;
  grid-row: 1;
  box-shadow: 0 0 0 var(--px) var(--edgeColor);
}

.pen-tabs__tab {
  font-size: 10pt;
  padding: 0 8px;
  a {
    text-decoration: none;
    @extend %font--display-medium;
  }
}

.pen-tabs__panes__content {
  overflow: hidden;
  max-width: $width;
  pre, code {
    max-width: $width;
  }
}

.page-info {
  display: grid;
  grid-template-rows: subgrid;
  flex-direction: column;
  color: var(--colorContentSecondary);
  @media (width <= $breakpoint) {
    position: static;
    flex-direction: row;
  }
}


.page-info__list {
  display: grid;
  column-gap: 5px;
  // set font size here despite never using as font-size to avoid extensive calc statements, and instead  em
  font-size: var(--type-0);
  padding: .375em 0;
  row-gap: .5em;
  grid-template-columns: min-content auto;
  grid-auto-rows: min-content;
  position: sticky;
  // top: calc(2 * 2.4em + var(--type-5));
  @media (width <= $breakpoint) { 
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: .25rem;
  }
  > * {
    margin: 0;
    font-size: var(--type--2);
  }
  .page-info__entry__key {
    text-align: right;
    color: var(--contentSecondaryColor);
    @media (width <= $breakpoint) { 
      &::after {
        content: ': '
      }
    }
  }
  .page-info__entry__value {
    text-align: left;
    @media (width <= $breakpoint) { 
      display: inline;
      li {
        display: inline;
      }
    }
  }
}

.page-info__entry {
  display: grid;
  grid-column: 1 / -1;
  padding: 0;
  line-height: var(--type-0);
  min-height: var(--type-0);
  grid-template-columns: subgrid;
  overflow: hidden;
  @media (width <= $breakpoint) { 
    display: inline;
    padding: 0;
    &:not(:last-child)::after {
      content: ', '
    }
    &--tags {
      display: inline;
      .page-info__entry__value li:not(:last-child)::after {
        content: ','
      }
    }
  }
}

.back-to-index {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  z-index: 10;
  position: sticky;
  top: 0;
  @media (width <= $breakpoint) {
    display: none;
  }
}

.back-to-index__button {
  appearance: none;
  cursor: pointer;
  border: 0;
  display: grid;
  place-content: center;
  border-radius: 50%;
  aspect-ratio: 1;
  height: 75%;
  max-height: calc(var(--type-5));
  backdrop-filter: blur(20px) saturate(120%);
  -webkit-backdrop-filter: blur(20px) saturate(120%);
  position: sticky;
  top: 1.4em;
  background-color: var(--materialSecondaryColor);
  &:hover {
    background-color: var(--materialSecondaryHoverColor);
  }
  &:active {
    scale: .95;
  }
  svg {
    color: var(--contentPrimaryColor);
  }
}

.sub-list__item {
  width: min-content;
  @media (width <= $breakpoint) {
    display: inline;
    width: auto;
  }
}