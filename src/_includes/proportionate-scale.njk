{% from "footer.njk" import Footer with context %}
{% from "tag.njk" import tag as tagButton %}

<script>
{% macro _scaleScript() %}
  function scaleElement(el) {
    const elWidth = el.offsetWidth;
    // const elHeight = el.offsetHeight;
    const wrapper = el.parentElement;
    const container = wrapper.parentElement;
    const wrapperWidth = wrapper.clientWidth;
    const wrapperHeight = wrapper.clientHeight;
  
    const scale = Math.min(1, wrapperWidth / elWidth);
  
    wrapper.classList.add('proportionate-scale-bounds');
    container.classList.add('proportionate-scale-block');
    container.style.setProperty('--scale', scale);
    // only set height once; otherwise it's recursive
    isOnResize ? '' : container.style.setProperty('--height', wrapperHeight + 'px');
  }
  
  function proportionateScale(isOnResize = false) {
    const elements = document.querySelectorAll('.proportionate-scale');
    elements.forEach(scaleElement);
  }
  
  function handleDomReady() {
    proportionateScale(isOnResize = false);
    window.addEventListener('resize', function(event) {
      proportionateScale(isOnResize = true);
    });
  }
  
  document.addEventListener('DOMContentLoaded', handleDomReady);
{% endmacro %}
</script>

{% macro proportionateScale() -%}
  <div class="proportionate-scale">
    {{ caller () }}
  </div>
  {% js "defer" %}
    {{ _scaleScript() }}
  {% endjs %}
{%- endmacro %}
